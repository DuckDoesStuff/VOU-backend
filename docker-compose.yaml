services:
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: vou@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    networks:
      - auth-network
      - user-network
      - event-network
      - mongo-network
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  auth-db:
    image: postgres
    ports:
      - "5431:5432"
    networks:
      - auth-network
    environment:
      POSTGRES_USER: vou
      POSTGRES_PASSWORD: vouadmin123
      POSTGRES_DB: auth_service
    volumes:
      - auth-data:/var/lib/postgresql/data

  user-db:
    image: postgres
    ports:
      - "5432:5432"
    networks:
      - user-network
    environment:
      POSTGRES_USER: vou
      POSTGRES_PASSWORD: vouadmin123
      POSTGRES_DB: user_service
    volumes:
      - user-data:/var/lib/postgresql/data

  event-db:
    image: postgres
    ports: 
     - "5433:5432"
    networks:
      - event-network
    environment:
      POSTGRES_USER: vou
      POSTGRES_PASSWORD: vouadmin123
      POSTGRES_DB: event_service
    volumes:
      - event-data:/var/lib/postgresql/data
  
  game-db:
    image: mongo:latest
    container_name: game-db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  # API SERVICES
  # TO RUN USE: docker compose up --build --profile API
  auth-service:
    profiles: [API]
    build: ./auth-service
    ports:
      - "8001:8001"
    networks:
      - auth-network
    environment:
      SPRING_PROFILES_ACTIVE: docker
  user-service:
    profiles: [API]
    build: ./user-service
    ports:
      - "8002:8002"
    networks:
      - user-network
    environment:
      SPRING_PROFILES_ACTIVE: docker
  

networks:
  auth-network:
    driver: bridge
  user-network:
    driver: bridge
  event-network:
    driver: bridge
  mongo-network:
    driver: bridge

volumes:
  auth-data:
  user-data:
  pgadmin-data:
  mongo-data:
  event-data:
