name: 'Build docker compose file and push to Artifact Registry'

on:
  push:
    branches: [ "deploy" ]

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}


jobs:
  build:
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Authenticate to Google Cloud
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      # Authenticate to the Docker registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Get the commit message
        id: get_commit_message
        run: |
          # Get the commit message of the most recent commit
          COMMIT_MESSAGE=$(git log -1 --pretty=format:%s)
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV

      - name: Extract version number from commit message
        id: extract_version
        run: |
          # Extract version number from commit message (assumes message contains "Version: x.y.z")
          VERSION=$(echo "$COMMIT_MESSAGE" | grep -oP 'Version: \K[\d\.]+')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Build the Docker images
      - name: Build Docker images
        run: |
          version=$VERSION
          docker compose --profile API build
          docker compose --profile API push